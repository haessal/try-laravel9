# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
jobs:
  build:
    docker:
      # Specify the version you desire here
      - image: circleci/php:8.0
      - image: circleci/mysql:5.7
        command: mysqld --default-authentication-plugin=mysql_native_password
    environment:
      - DB_DATABASE=testing_circleci
      - DB_USERNAME=root
      - DB_PASSWORD=
    working_directory: ~/laraBookKeeping
    steps:
      - checkout
      - run:
          name: Install Node.js and CSpell(spell checker)
          command: |
            sudo apt update
            sudo apt install -y nodejs npm
            sudo npm install -g n
            sudo n stable
            sudo npm install -g cspell
      - run:
          name: Install MySQL packages
          command: |
            sudo -E docker-php-ext-install pdo_mysql
            sudo apt update
            sudo apt install -y default-mysql-client
      - run:
          name: Install Composer 2.x
          command: |
            sudo curl -sS -o /usr/local/bin/composer https://getcomposer.org/composer-2.phar
            sudo chmod a+x /usr/local/bin/composer
      # Download and cache dependencies
      - restore_cache:
          keys:
            # "composer.lock" can be used if it is committed to the repo
            - v1-dependencies-{{ checksum "book-keeping/composer.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          command: composer install -n --prefer-dist
          working_directory: ~/laraBookKeeping/book-keeping
      - save_cache:
          key: v1-dependencies-{{ checksum "book-keeping/composer.json" }}
          paths:
            - ./book-keeping/vendor
      - run:
          command: cp .env.example .env && php artisan key:generate
          working_directory: ~/laraBookKeeping/book-keeping
      - run: mkdir -p build/logs
      - run: dockerize -wait tcp://localhost:3306 -timeout 1m
      - run: mysql -h 127.0.0.1 -u root -e "create database testing_circleci;"
      - run:
          command: cspell "**/*.php"
          working_directory: ~/laraBookKeeping
      # run tests with phpunit
      - run:
          command: XDEBUG_MODE=coverage vendor/bin/phpunit -d memory_limit=512M --coverage-clover ../build/logs/clover.xml
          working_directory: ~/laraBookKeeping/book-keeping
      - run: php book-keeping/vendor/bin/php-coveralls -vvv
